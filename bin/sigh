#!/usr/bin/env ruby

$:.push File.expand_path("../../lib", __FILE__)

require 'sigh'
require 'commander/import'
require 'deliver/password_manager'

HighLine.track_eof = false


# Commander
program :version, Sigh::VERSION
program :description, 'CLI for \'sigh\' - Automatic maintaining of iOS certificates'
program :help, 'Author', 'Felix Krause <krausefx@gmail.com>'
program :help, 'Website', 'http://felixkrause.at'
program :help, 'GitHub', 'https://github.com/krausefx/sigh'
program :help_formatter, :compact

global_option('--verbose') { $verbose = true }


command :renew do |c|
  c.syntax = 'sigh renew'
  c.description = 'Renews the certificate (in case it expired) and outputs the path to the generated file'

  c.option '-a', '--identifier STRING', String, 'The bundle identifier of your app'
  c.option '-u', '--username STRING', String, 'Your Apple ID username'
  c.option '-n', '--cert_name STRING', String, 'The name of the generated certificate file.'
  c.option '-o', '--output STRING', String, 'The folder in which the file should be generated.'
  c.option '--adhoc', 'By default, sigh will create and renew App Store profiles. Setting this flag will generate Adhoc profiles instead.'
  c.option '--skip_install', 'By default, the certificate will be added on your local machine. Setting this flag will skip this action.'
  c.option '--development', 'Renew the development certificate instead of the production one'

  c.action do |args, options|
    app = app_identifier(options)
    username(options)

    type = Sigh::DeveloperCenter::APPSTORE
    type = Sigh::DeveloperCenter::ADHOC if options.adhoc 
    type = Sigh::DeveloperCenter::DEVELOPMENT if options.development
    
    path = Sigh::DeveloperCenter.new.run(app, type, options.cert_name)

    if path
      file_name = File.basename(path)
      output_path = options.output || '.'
      output = File.join(output_path.gsub("~", ENV["HOME"]), file_name)
      FileUtils.mv(path, output)
      system("open '#{output}'") unless options.skip_install
      puts output.green
    end
  end
end

default_command :renew

def username(options)
  user = nil
  user = options.username if options.username
  user = ENV["SIGH_USERNAME"] if ENV["SIGH_USERNAME"]
  
  Deliver::PasswordManager.shared_manager(user) if user
end

def app_identifier(options)
  return options.identifier if options.identifier
  return ENV["SIGH_APP_IDENTIFIER"] if ENV["SIGH_APP_IDENTIFIER"]
  return ask("App Identifier (Bundle ID, e.g. at.felixkrause.app): ")
end
