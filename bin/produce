#!/usr/bin/env ruby

$:.push File.expand_path("../../lib", __FILE__)

require 'produce'
require 'commander'
require 'credentials_manager/password_manager'
require 'credentials_manager/appfile_config'
require 'pry'

HighLine.track_eof = false

class FastlaneApplication
  include Commander::Methods

  def run
    program :version, Produce::VERSION
    program :description, 'CLI for \'produce\''
    program :help, 'Author', 'Felix Krause <produce@krausefx.com>'
    program :help, 'Website', 'http://fastlane.tools'
    program :help, 'GitHub', 'https://github.com/krausefx/produce'
    program :help_formatter, :compact

    global_option('--verbose') { $verbose = true }

    command :create do |c|
      c.syntax = 'produce create'
      c.description = 'Creates a new app on iTunes Connect and the Apple Developer Portal'

      c.option '-a', '--identifier STRING', String, 'The bundle identifier of your app'
      c.option '-u', '--username STRING', String, 'Your Apple ID username'

      c.action do |args, options|
        app = app_identifier(options)
        username(options)

        Produce::Manager.start_producing
      end
    end

    default_command :create

    run!
  end

  def username(options)
    user = 'krausefx1@gmail.com'
    # user = options.username
    user ||= ENV["PRODUCE_USERNAME"]
    user ||= CredentialsManager::AppfileConfig.try_fetch_value(:apple_id)
    
    CredentialsManager::PasswordManager.shared_manager(user) if user
  end

  def app_identifier(options)
    return 'net.sunapps.1'

    value = options.identifier
    value ||= ENV["PRODUCE_APP_IDENTIFIER"]
    value ||= CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
    value ||= ask("App Identifier (Bundle ID, e.g. com.krausefx.app): ")
    return value
  end

end

FastlaneApplication.new.run
